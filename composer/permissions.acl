/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule SellerUpdateThemselvesOnly {
  description: "A seller can only update their own data"
  participant(sp): "com.stockchainz.net.Seller"
  operation: ALL
  resource(sr): "com.stockchainz.net.Seller"
  condition: (sp.getIdentifier() === sr.getIdentifier())
  action: ALLOW
}

rule SellerCanCreateAnItem {
  description: "A seller can only create an item through the CreateItem transaction"
  participant: "com.stockchainz.net.Seller"
  operation: CREATE
  resource: "com.stockchainz.net.Item"
  transaction: "com.stockchainz.net.CreateItem"
  action: ALLOW
}

rule SellerCanCreateInventoryEntry {
  description: "A seller can only create inventory data through the CreateItem transaction"
  participant: "com.stockchainz.net.Seller"
  operation: CREATE
  resource: "com.stockchainz.net.Inventory"
  transaction: "com.stockchainz.net.CreateItem"
  action: ALLOW
}

rule SellerCanUpdateItem {
  description: "A seller can update an item through the UpdateItem transaction"
  participant(p): "com.stockchainz.net.Seller"
  operation: UPDATE
  resource(r): "com.stockchainz.net.Item"
  transaction: "com.stockchainz.net.UpdateItem"
  condition: (p.getIdentifier() === r.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanDeleteItem {
  description: "A seller can delete an item through the DeleteItem transaction"
  participant(p): "com.stockchainz.net.Seller"
  operation: DELETE
  resource(r): "com.stockchainz.net.Item"
  transaction: "com.stockchainz.net.DeleteItem"
  condition: (p.getIdentifier() === r.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanDeleteInventory {
  description: "A seller can delete inventory through the DeleteItem transaction"
  participant(p): "com.stockchainz.net.Seller"
  operation: DELETE
  resource(r): "com.stockchainz.net.Inventory"
  transaction: "com.stockchainz.net.DeleteItem"
  condition: (p.getIdentifier() === r.item.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanRestockItem {
  description: "A seller can restock their own item through the RestockItem transaction"
  participant(p): "com.stockchainz.net.Seller"
  operation: UPDATE
  resource(r): "com.stockchainz.net.Item"
  transaction: "com.stockchainz.net.RestockItem"
  condition: (p.getIdentifier() === r.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanRestockInventory {
  description: "A seller can add a restock entry to their inventory through the RestockItem transaction"
  participant(p): "com.stockchainz.net.Seller"
  operation: UPDATE
  resource(r): "com.stockchainz.net.Inventory"
  transaction: "com.stockchainz.net.RestockItem"
  condition: (p.getIdentifier() === r.item.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanSellItem {
  description: "A seller can sell their own item through the ConfirmSale transaction"
  participant(p): "com.stockchainz.net.Seller"
  operation: UPDATE
  resource(r): "com.stockchainz.net.Item"
  transaction: "com.stockchainz.net.ConfirmSale"
  condition: (p.getIdentifier() === r.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanSellInventory {
  description: "A seller can add a sale entry to their inventory through the ConfirmSale transaction"
  participant(p): "com.stockchainz.net.Seller"
  operation: UPDATE
  resource(r): "com.stockchainz.net.Inventory"
  transaction: "com.stockchainz.net.ConfirmSale"
  condition: (p.getIdentifier() === r.item.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanConfirmSale {
  description: "A seller can confirm an item sale item through the ConfirmSale transaction"
  participant(p): "com.stockchainz.net.Seller"
  operation: UPDATE
  resource(r): "com.stockchainz.net.Sale"
  transaction: "com.stockchainz.net.ConfirmSale"
  condition: (p.getIdentifier() === r.item.seller.getIdentifier())
  action: ALLOW
}

rule SellerCanReadSales {
  description: "A seller can see their sale history"
  participant(p): "com.stockchainz.net.Seller"
  operation: READ
  resource(r): "com.stockchainz.net.Sale"
  condition: (p.getIdentifier() === r.item.seller.getIdentifier())
  action: ALLOW
}

rule SellerAccessTheirInventory {
  description: "Inventory data can only be accessed/modified by their own seller"
  participant(p): "com.stockchainz.net.Seller"
  operation: READ
  resource(r): "com.stockchainz.net.Inventory"
  condition: (p.getIdentifier() === r.item.seller.getIdentifier())
  action: ALLOW
}

rule SellerAccessTheirHistory {
  description: "History can only be accessed by their own seller"
  participant(p): "com.stockchainz.net.Seller"
  operation: READ
  resource(r): "org.hyperledger.composer.system.HistorianRecord"
  condition: (r.participantInvoking.getIdentifier() !== p.getIdentifier())
  action: DENY
}

rule BuyerUpdateThemselvesOnly {
  description: "A buyer can only update their own data"
  participant(bp): "com.stockchainz.net.Buyer"
  operation: ALL
  resource(br): "com.stockchainz.net.Buyer"
  condition: (bp.getIdentifier() === br.getIdentifier())
  action: ALLOW
}

rule BuyerCanPlaceAnOrder {
  description: "A buyer can place an order"
  participant: "com.stockchainz.net.Buyer"
  operation: CREATE
  resource: "com.stockchainz.net.Sale"
  transaction: "com.stockchainz.net.PlaceOrder"
  action: ALLOW
}

rule BuyerCanReadOrders {
  description: "A buyer can see their order history"
  participant(p): "com.stockchainz.net.Buyer"
  operation: READ
  resource(r): "com.stockchainz.net.Sale"
  condition: (p.getIdentifier() === r.buyer.getIdentifier())
  action: ALLOW
}

rule BuyerCanReadHistory {
  description: "History can only be accessed by the buyer"
  participant(p): "com.stockchainz.net.Buyer"
  operation: READ
  resource(r): "org.hyperledger.composer.system.HistorianRecord"
  condition: (r.participantInvoking.getIdentifier() !== p.getIdentifier())
  action: DENY
}

rule EnableCreateItemTx {
  description: "Enable sellers to create items"
  participant: "com.stockchainz.net.Seller"
  operation: ALL
  resource: "com.stockchainz.net.CreateItem"
  action: ALLOW
}

rule EnableConfirmSaleTx {
  description: "Enable sellers to confirm sale transactions"
  participant(p): "com.stockchainz.net.Seller"
  operation: ALL
  resource(r): "com.stockchainz.net.ConfirmSale"
  condition: (r.sale.item.seller.getIdentifier() === p.getIdentifier())
  action: ALLOW
}

rule EnableRestockItemTx {
  description: "Enable sellers to restock item"
  participant(p): "com.stockchainz.net.Seller"
  operation: ALL
  resource(r): "com.stockchainz.net.RestockItem"
  condition: (r.item.seller.getIdentifier() === p.getIdentifier())
  action: ALLOW
}

rule EnableDeleteItemTx {
  description: "Enable sellers to delete item"
  participant(p): "com.stockchainz.net.Seller"
  operation: ALL
  resource(r): "com.stockchainz.net.DeleteItem"
  condition: (r.item.seller.getIdentifier() === p.getIdentifier())
  action: ALLOW
}

rule EnableUpdateItemTx {
  description: "Enable sellers to update item"
  participant(p): "com.stockchainz.net.Seller"
  operation: ALL
  resource(r): "com.stockchainz.net.UpdateItem"
  condition: (r.item.seller.getIdentifier() === p.getIdentifier())
  action: ALLOW
}

rule EnablePlaceOrderTx {
  description: "Enable buyers to place orders"
  participant: "com.stockchainz.net.Buyer"
  operation: ALL
  resource: "com.stockchainz.net.PlaceOrder"
  action: ALLOW
}

rule EveryoneCanReadSeller {
  description: "Everyone can read data about a seller"
  participant: "ANY"
  operation: READ
  resource: "com.stockchainz.net.Seller"
  action: ALLOW
}

rule EveryoneCanReadItem {
  description: "Everyone can read data about an item"
  participant: "ANY"
  operation: READ
  resource: "com.stockchainz.net.Item"
  action: ALLOW
}

rule SystemACL {
  description:  "System ACL to permit all access"
  participant: "org.hyperledger.composer.system.Participant"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}

rule NetworkAdminUser {
  description: "Grant business network administrators full access to user resources"
  participant: "org.hyperledger.composer.system.NetworkAdmin"
  operation: ALL
  resource: "**"
  action: ALLOW
}

rule NetworkAdminSystem {
  description: "Grant business network administrators full access to system resources"
  participant: "org.hyperledger.composer.system.NetworkAdmin"
  operation: ALL
  resource: "org.hyperledger.composer.system.**"
  action: ALLOW
}